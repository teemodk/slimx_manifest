Welcome to SlimKAT for HTC OneX
===============================


Getting Started
---------------

To get started with SlimKat, you'll need to get familiar with
[Git and Repo](http://source.android.com/download/using-repo).

Init your repo:

    $ repo init -u git://github.com/teemodk/slimx_manifest.git -b kk4.4

Add One X repositories - create file .repo/local_manifests/slim_manifest.xml

    <?xml version="1.0" encoding="UTF-8"?>
    <manifest>
      <project name="teemodk/android_kernel_htc_endeavoru"             path="kernel/htc/endeavoru"         remote="github" revision="kk4.4" />
      <project name="teemodk/android_device_htc_endeavoru"             path="device/htc/endeavoru"         remote="github" revision="kk4.4" />
      <project name="teemodk/android_device_htc_tegra3-common"         path="device/htc/tegra3-common"     remote="github" revision="kk4.4" />
      <project name="TheMuppets/proprietary_vendor_htc"                path="vendor/htc"                   remote="github" revision="cm-11.0" />
      <project name="CyanogenMod/android_external_wpa_supplicant_8_ti" path="external/wpa_supplicant_8_ti" remote="github" revision="cm-11.0" />
      <remove-project name="SlimRoms/hardware_ti_wpan" />
      <project name="CyanogenMod/android_hardware_ti_wpan" path="hardware/ti/wpan" remote="github" revision="cm-11.0" />
      <remove-project name="SlimRoms/hardware_ti_wlan" />
      <project name="CyanogenMod/android_hardware_ti_wlan" path="hardware/ti/wlan" remote="github" revision="cm-11.0" />
    </manifest>


Get the source:

    $ repo sync

Setup environment:

    $ . build/envsetup.sh
    $ lunch slim_endeavoru-userdebug

Build:

    $ make -j4 bacon



Submitting Patches
------------------

We're open source, and patches are always welcome!
You can send patches by using these commands:

    cd <workspace>
    repo start <branch> SlimRoms/<project>
    cd <project>
    git add -A
    git commit -a
    cd <workspace>
    repo upload SlimRoms/<project>

Commit your patches in a single commit.

Squash multiple commit using this command:

	git rebase -i HEAD~<# of commits>

If you are going to make extra additions, just repeat steps (Don't repo start again), but instead of

	git commit -a

use

	git commit --amend

Gerrit will recognize it as a new patchset.

To view the status of your and others patches, visit [SlimRoms Code Review](http://gerrit.slimroms.net)
